/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./public/js/style.css":
/*!*******************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./public/js/style.css ***!
  \*******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n    box-sizing: border-box;\n}\n\n#container {\n    display: grid;\n    grid-template-columns: 3fr 1fr 3fr;\n    justify-content: space-around;\n    text-align: center;\n    text-transform: uppercase;\n    /* justify-content: center; */\n    align-items: center;\n    justify-items: center;\n\n}\n\n\n\n#board_pst,\n#board_atk {\n    border: 1px solid black;\n    /* border-collapse: collapse; */\n    /* width: 500px; */\n    /* height: 500px; */\n\n    display: grid;\n    grid-template-columns: repeat(10, 40px);\n    grid-template-rows: repeat(10, 40px);\n    flex-wrap: wrap;\n    /* grid-gap:10px; */\n    /* width: 100%;\n    height: 100%; */\n}\n\n#board_pst div,\n#board_atk div {\n    /* width: 50px; */\n    width: 100%;\n    /* height: 50px; */\n    border: 1px solid black;\n    margin: 0 -10px 0 0;\n    /* background-color: blueviolet; */\n}\n\n.ship {\n    background-color: yellow;\n    /* border-radius: 5px; */\n    /* border: 2px solid red; */\n    /* box-shadow:0 0 0 10px palegreen;  */\n\n}\n\n.all_board {\n    display: flex;\n}\n\n.pst_ind_right,\n.atk_ind_right {\n    display: flex;\n    /* width: 400px; */\n    text-align: center;\n    /* text-transform: uppercase; */\n}\n\n.pst_ind_right div,\n.atk_ind_right div {\n    width: 100%;\n}\n\n.pst_ind_left,\n.atk_ind_left {\n    display: flex;\n    flex-direction: column;\n    /* height: 400px; */\n    margin-top: 4%;\n    margin-right: 5px;\n    /* justify-content: center; */\n    align-content: center;\n\n}\n\n.pst_ind_left div,\n.atk_ind_left div {\n    width: 100%;\n    height: 100%;\n    /* justify-content: 100px; */\n    /* padding-top: 10px; */\n}\n\n.square {\n    border: 1px solid rebeccapurple;\n    width: 12.5%;\n    height: 12.5%;\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: transform 2s;\n}\n\n.hit {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    color: red;\n    font-weight: bold;\n    text-align: center;\n    font-size: xx-large;\n    margin: 0;\n    /* background-image: url(images/redPoint.png); */\n    image-resolution: 10px 10px;\n    /* background-color: red; */\n}\n\n.nav_hit {\n    background-color: rgba(255, 0, 0, 0.39);\n    /* border: 1px solid red; */\n}\n\nimg {\n    width: 40px;\n    height: 40px;\n}\n\n#display_turn {\n    width: 100px;\n    height: 100px;\n    /* background-color: red; */\n    font-weight: bold;\n\n}\n\nbutton:disabled {\n    border: 1px solid #999999;\n    background-color: #cccccc;\n    color: #666666;\n}\n\n.selected {\n    display: none;\n}\n\n#target_opt {\n    text-align: center;\n    justify-items: center;\n}\n\n#state {\n    font-size: x-large;\n}\n\n#game {\n    height: 80px;\n}\n\n\n\n#btn_select_opt {\n    padding-bottom: 10px;\n}\n\ndiv.dispo {\n    background-color: aqua;\n\n}\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://battleshipodp/./public/js/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://battleshipodp/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://battleshipodp/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./public/js/style.css":
/*!*****************************!*\
  !*** ./public/js/style.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./public/js/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://battleshipodp/./public/js/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://battleshipodp/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://battleshipodp/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://battleshipodp/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://battleshipodp/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://battleshipodp/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://battleshipodp/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./public/js/dragControler.js":
/*!************************************!*\
  !*** ./public/js/dragControler.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   controlDrag: () => (/* binding */ controlDrag),\n/* harmony export */   makingNewDiv: () => (/* binding */ makingNewDiv)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./public/js/index.js\");\n/* harmony import */ var _gameBoard_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gameBoard.js */ \"./public/js/gameBoard.js\");\n/* harmony import */ var _ship_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ship.js */ \"./public/js/ship.js\");\n\n\n\n\nlet positionBoard = document.querySelector(\"#board_pst\");\nlet targetShipDraging = null\nlet valueTargetDiv = null;\nlet targetPointer = null;\nconst pxSize = 40;\nlet newListOfNoAvailable = [];\nlet newPositionHover = [];\nlet shipInPjBoard;\nlet listValuesShip;\nlet allowed = false;\n\n\n// ************************EVENTS OVER THE DESTINATION ZONE ***************************************************\n\nfunction dragOverHandlerDropZone(e) {\n    let partial = e.target;\n    if (allowed) {\n        e.preventDefault()\n        // prevent to select as target the actual zone of the ship\n        if (targetPointer != partial && partial != targetShipDraging) {\n            updateDispo();\n            checkValidPosition(partial)\n            targetPointer = partial;\n        }\n    }\n}\n\nfunction updateDispo() {\n    let dispoItems = document.querySelectorAll(\".dispo\")\n    for (const i of dispoItems) {\n        i.classList.remove(\"dispo\")\n    }\n}\n//check if the hover zone it is a valid position to drop the ship\nfunction checkValidPosition(target) {\n    listValuesShip = targetShipDraging.values.split(\",\");\n    let valueTempoHover = target.getAttribute('data-value');\n    let valueDiferentia = valueTempoHover - valueTargetDiv;\n    newPositionHover = listValuesShip.map((x) => +x + valueDiferentia)\n    let dispo = newPositionHover.every((item) => !newListOfNoAvailable[item] && item >= 0 && item <= 99);\n    if (dispo) {\n        for (const iter of newPositionHover) {\n            let tempo = document.querySelector(`div[data-value=\"${iter}\"]`)\n            tempo.classList.add(\"dispo\")\n        }\n    }\n}\n\nfunction dropped(e) {\n    allowed = false;\n    let newPositons = positionBoard.querySelectorAll(\".dispo\");\n\n    //functionality: when drop over a not valid zone nothing happend\n    if (newPositons.length > 0) {\n        //remove the old positions on board\n        let oldClase = targetShipDraging.classList[0]\n        let oldPositions = document.querySelectorAll(`.${oldClase}.ship`);\n        for (const elm of oldPositions) {\n            //set the old nav position as available in the player list of coordinates\n            _index_js__WEBPACK_IMPORTED_MODULE_0__.player.board.listCoordinates[elm.getAttribute(\"data-value\")] = false;\n\n            elm.classList.remove(`${oldClase}`, \"ship\")\n            elm.style.position = null;\n            if (elm.firstChild) {\n                elm.removeChild(elm.firstChild)\n            }\n        }\n        //create the class with the new positions\n        let newClass = `${shipInPjBoard.getType()}`;\n        for (const post of newPositionHover) {\n            newClass += `_${post}`;\n        }\n        for (const pst of newPositons) {\n            // console.log(i);\n            pst.classList.remove(\"dispo\")\n            pst.classList.add(newClass)\n            pst.classList.add(\"ship\")\n\n            //set the new nav position as not available\n            // newListOfNoAvailable[pst.getAttribute(\"data-value\")] = true;\n\n            //set the new nav position as not available in the player list of coordinates\n            _index_js__WEBPACK_IMPORTED_MODULE_0__.player.board.listCoordinates[pst.getAttribute(\"data-value\")] = true;\n        }\n        //create the new nav\n        let newShip = new _ship_js__WEBPACK_IMPORTED_MODULE_2__.Ship(newPositionHover.length);\n        newShip.setPosition(newPositionHover);\n        let spaceArd = [];\n        for (const i of newPositionHover) {\n            let pointsArdNewPosition = _gameBoard_js__WEBPACK_IMPORTED_MODULE_1__.GameBoard.helperCheckPst(+i, []);\n            for (const j of pointsArdNewPosition) {\n                //include only if is not in the list nither a ship point\n                if (!spaceArd.includes(j) && !newPositionHover.includes(j)) {\n                    spaceArd.push(j)\n                }\n            }\n        }\n        //set the new space around of the new nav as not available\n        // spaceArd.map((elm) => newListOfNoAvailable[elm] = true)\n\n        newShip.setSpaceAround(spaceArd);\n        //update th board of the player\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.player.updateShip(valueTargetDiv, newShip);\n        removeBigDivs();\n        newListOfNoAvailable = []\n        makingNewDiv();\n        preDragEvents();\n    }\n}\n\nfunction removeBigDivs() {\n    for (const cls of _index_js__WEBPACK_IMPORTED_MODULE_0__.player.getListClass()) {\n        let target = positionBoard.querySelector(`.${cls}`)\n        if (target.firstChild) {\n            target.removeChild(target.firstChild)\n        }\n    }\n}\n\nfunction clarEventos() {\n    let positionShip = positionBoard.querySelectorAll('.ship');\n    for (const pointShip of positionShip) {\n        pointShip.removeEventListener(\"mouseenter\", mouseenterHandler)\n        pointShip.removeEventListener(\"mousedown\", mousedownHandler)\n    }\n}\n\n\n\n//************************EVENTS OVER THE ELEMENT****************************************************\nfunction dragStartHandler(e) {\n    if (e.target.draggable) {\n        allowed = true;\n    }\n}\n\nfunction dragEndHandler(e) {\n    e.target.style.display = \"none\";\n}\n\nfunction controlDrag() {\n    // positionBoard.addEventListener(\"dragenter\", dragEnterHandlerDropZone);\n    positionBoard.addEventListener(\"dragover\", dragOverHandlerDropZone);\n    positionBoard.addEventListener(\"drop\", dropped);\n    positionBoard.addEventListener(\"dragstart\", dragStartHandler);\n    preDragEvents();\n}\n\nfunction preDragEvents() {\n    let positionShip = positionBoard.querySelectorAll('.ship');\n    for (const shipYellow of positionShip) {\n        shipYellow.addEventListener('mouseenter', mouseenterHandler)\n        shipYellow.addEventListener('mousedown', mousedownHandler)\n    }\n}\n\n\nfunction mouseenterHandler(e) {\n    targetShipDraging = document.getElementById(`${this.classList[0]}`)\n}\nfunction mousedownHandler(e) {\n    valueTargetDiv = e.target.getAttribute('data-value')\n    targetShipDraging.style.display = \"block\"\n    updatListOfNoAvailable();\n}\n\n//set the newListOfNoAvailable, not available other ships and their around space;\nfunction updatListOfNoAvailable() {\n    shipInPjBoard = _index_js__WEBPACK_IMPORTED_MODULE_0__.player.identifyShip(valueTargetDiv)\n    let shipCoor = shipInPjBoard.getPositions();\n    let listNavs = _index_js__WEBPACK_IMPORTED_MODULE_0__.player.listShips;\n\n    // add the space around of the all ships but not the actual target\n    for (const nav of listNavs) {\n        if (nav != shipInPjBoard) {\n            let spaceArd = nav.getSpaceAround()\n            for (const point of spaceArd) {\n                newListOfNoAvailable[point] = true;\n            }\n        }\n    }\n\n    // add the positions of the all ships as not available\n    let coor = _index_js__WEBPACK_IMPORTED_MODULE_0__.player.board.listCoordinates;\n    for (let i = 0; i < coor.length - 1; i++) {\n        if (newListOfNoAvailable[i] == undefined) {\n            newListOfNoAvailable[i] = coor[i];\n        }\n    }\n    //override the position of the current target ship as available\n    for (const pto of shipCoor) {\n        newListOfNoAvailable[pto] = false;\n    }\n}\n\n//create a div that cover the size of the ship\nfunction makingNewDiv() {\n\n    //select the first point of the each ship\n    for (const cls of _index_js__WEBPACK_IMPORTED_MODULE_0__.player.getListClass()) {\n        let target = positionBoard.querySelector(`.${cls}`)\n        let newDiv = document.createElement('div')\n        let listOfCoordinates = cls.split(\"_\")\n\n        //format the coordinates to creat the div in the right place\n        listOfCoordinates.shift();\n        listOfCoordinates.sort((a, b) => a - b);\n\n        let sizeDiv = listOfCoordinates.length;\n        let direccion = listOfCoordinates.length > 1 ?\n            ((+listOfCoordinates[1] - (+listOfCoordinates[0])) == 1 ? \"hrz\" : \"vert\") :\n            \"none\"\n\n        newDiv.classList.add(`${cls}`);\n        newDiv.classList.add('dragShip');\n        newDiv.values = `${listOfCoordinates}`;\n        newDiv.style.display = \"none\"\n        newDiv.setAttribute('id', `${cls}`)\n        newDiv.classList.add(`${direccion}_${sizeDiv}`)\n        newDiv.style.border = \"solid 5px red\"\n        newDiv.setAttribute('draggable', \"true\")\n\n        if (direccion === \"hrz\") {\n            newDiv.style.width = `${pxSize * sizeDiv}px`;\n            newDiv.style.height = `${pxSize}px`;\n        } else {\n            newDiv.style.height = `${pxSize * sizeDiv}px`;\n        }\n        target.style.position = \"relative\";\n        newDiv.addEventListener(\"dragend\", dragEndHandler)\n        target.appendChild(newDiv)\n    }\n}\n\n\n\n//# sourceURL=webpack://battleshipodp/./public/js/dragControler.js?");

/***/ }),

/***/ "./public/js/gameBoard.js":
/*!********************************!*\
  !*** ./public/js/gameBoard.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GameBoard: () => (/* binding */ GameBoard),\n/* harmony export */   \"default\": () => (/* binding */ GameBoard)\n/* harmony export */ });\n\n//recive a array of ships to set the position on the board like {1,2,5,3} where each int represent a size\n// TODO //1.makeboard //2. set the position of boards\n\nclass GameBoard {\n    listCoordinates = [];\n    listUnavailable = [];\n\n    constructor(armada) {\n        this.makeBoard();\n        for (const nav of armada) {\n            let positionsNav = this.positionShip(nav.getSizeShip());\n            //set the coordinates of nav into the nav\n            nav.setPosition(positionsNav[0]);\n            nav.setSpaceAround(positionsNav[1]);\n\n        }\n    }\n\n    makeBoard() {\n        for (let i = 0; i <= 99; i++) {\n            this.listCoordinates[i] = false;\n        }\n    }\n    //loop until find a valid position for set the ship.\n    positionShip(size) {\n        let position;\n        let bluprint;\n        // search for a clean point to position the ship\n        //TODO the initial search can be better?\n        while (true) {\n            position = this.getRandomInt();\n            // if true (the point it´s clear), the item can be taken as point of start\n            if (this.listCoordinates[position] == false) {\n                bluprint = this.direcction(position, size)\n                //if true there are at least one direccion to build the ship\n                if (bluprint != undefined) {\n                    break\n                }\n            }\n        }\n        // bluprint[0] are the points to construct the Ship\n        // fill the global variables with the values\n        bluprint[0].map((elm) => this.listCoordinates[elm] = true)\n        // console.log(\"points of ship: \", bluprint[0], \"point no availables:\", bluprint[1]);\n        this.listUnavailable.push(...[...bluprint[1]]);\n        return bluprint;\n    }\n\n    // take a point of star and determine a direction to build the ship \n    // reterun a direccion (top 1, down 3, right 2, left 4 ) or (false) if a point don´t have any valid  direccion\n    direcction(starPoint, sizeShip) {\n        let row = Math.floor(starPoint / 10);\n        let col = starPoint % 10\n\n        //space available\n        let downAvl = row;\n        let upAvl = 9 - row;\n        let leftAvl = col;\n        let rightAvl = 9 - col;\n\n        let pointsToBuild = [];\n        //check if are space if so then search the space around\n        if (downAvl >= sizeShip) {\n            pointsToBuild = this.checkPoints(starPoint, sizeShip, -10);\n            if (pointsToBuild != undefined && pointsToBuild[0].length === sizeShip) {\n                return pointsToBuild;\n            }\n\n        } if (upAvl >= sizeShip) {\n            pointsToBuild = this.checkPoints(starPoint, sizeShip, 10);\n            if (pointsToBuild != undefined && pointsToBuild[0].length === sizeShip) {\n                return pointsToBuild;\n            }\n\n        } if (leftAvl >= sizeShip) {\n\n            pointsToBuild = this.checkPoints(starPoint, sizeShip, -1);\n            if (pointsToBuild != undefined && pointsToBuild[0].length === sizeShip) {\n                return pointsToBuild;\n            }\n\n        } if (rightAvl >= sizeShip) {\n            pointsToBuild = this.checkPoints(starPoint, sizeShip, 1);\n            if (pointsToBuild != undefined && pointsToBuild[0].length === sizeShip) {\n                return pointsToBuild;\n            }\n        } else {\n            return;\n        }\n    }\n\n    // let listCoordinates = makeBoard();\n    // check the points of a ship base on his length\n    // return a array with the points to build the ship [0] and all the points around the ship [1]\n    checkPoints(point, sizeShip, direccion) {\n        let listPointsConstruction = [];\n        let listPointInPerimeter = [];\n        let result = [];\n        // \n        for (let i = 0; i < sizeShip; i++) {\n            //check all the around of the point, if the space is available\n            // false means a ship in that position\n            let partial = GameBoard.helperCheckPst(point, this.listCoordinates);\n            if (partial !== false) {\n                listPointsConstruction.push(point);\n                listPointInPerimeter.push(...partial.filter((elm) => !(listPointInPerimeter.includes(elm))))\n                //chenge the point toward the direction\n                point += direccion;\n\n            } else {\n                return;\n            }\n        }\n        // filter the points around\n        listPointInPerimeter = listPointInPerimeter.filter((elm) => !(listPointsConstruction.includes(elm)))\n        result.push(listPointsConstruction, listPointInPerimeter)\n        return result;\n    }\n    // check all the direccions around a point,\n    // return the perimeter around a point or false if the perimeter is not valid\n    static helperCheckPst(pointStr, listCoord) {\n        let baseRow = Math.floor(pointStr / 10);\n        let baseCol = pointStr % 10\n\n        let partialPerimeter = []\n        let topes = []\n        let total = 8;\n\n        // if the point is at the end of the columns still be a valid position  \n        if (baseCol == 9) {\n            topes.push(...[pointStr + 1, (pointStr - 10) + 1, (pointStr + 10) + 1])\n            // if the point is at the begining of the columns\n        } if (baseCol == 0) {\n            topes.push(...[pointStr - 1, (pointStr - 10) - 1, (pointStr + 10) - 1]);\n        } if (baseRow == 0) {\n            topes.push(...[pointStr - 10, (pointStr - 10) - 1, (pointStr - 10) + 1]);\n        } if (baseRow == 9) {\n            topes.push(...[pointStr + 10, (pointStr + 10) - 1, (pointStr + 10) + 1])\n        }\n\n        //all the 8 points around\n        let pointsAround = [\n            pointStr - 1,\n            pointStr + 1,\n            pointStr - 10,\n            pointStr + 10,\n            (pointStr - 1) + 10,\n            (pointStr - 1) - 10,\n            (pointStr + 1) + 10,\n            (pointStr + 1) - 10\n        ]\n        for (const element of pointsAround) {\n            //check if it is a valid even if it is out of the board\n            if (topes.includes(element)) {\n                total--;\n            } else if (listCoord[element] == false || listCoord.length == 0) {\n                partialPerimeter.push(element)\n                total--;\n            }\n\n        }\n        // pointsAround.forEach(element => {\n\n        // });\n        return total === 0 ? partialPerimeter : false;\n    }\n    //return a random number between min and max, both included\n    getRandomInt(min = 0, max = 99) {\n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n}\n\n// module.exports = GameBoard;\n\n// module.exports = checkPoints;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://battleshipodp/./public/js/gameBoard.js?");

/***/ }),

/***/ "./public/js/index.js":
/*!****************************!*\
  !*** ./public/js/index.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attackBoard: () => (/* binding */ attackBoard),\n/* harmony export */   displayTurn: () => (/* binding */ displayTurn),\n/* harmony export */   drawPointOfAttack: () => (/* binding */ drawPointOfAttack),\n/* harmony export */   drawRemainPoints: () => (/* binding */ drawRemainPoints),\n/* harmony export */   idOponent: () => (/* binding */ idOponent),\n/* harmony export */   idPlayer: () => (/* binding */ idPlayer),\n/* harmony export */   inputNameRoom: () => (/* binding */ inputNameRoom),\n/* harmony export */   nameGameRoom: () => (/* binding */ nameGameRoom),\n/* harmony export */   navHit: () => (/* binding */ navHit),\n/* harmony export */   player: () => (/* binding */ player),\n/* harmony export */   positionBoard: () => (/* binding */ positionBoard),\n/* harmony export */   setID: () => (/* binding */ setID),\n/* harmony export */   setIdOponent: () => (/* binding */ setIdOponent),\n/* harmony export */   setNameRoom: () => (/* binding */ setNameRoom),\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./public/js/style.css\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player.js */ \"./public/js/player.js\");\n/* harmony import */ var _dragControler_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dragControler.js */ \"./public/js/dragControler.js\");\n/* harmony import */ var _socketIOControl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./socketIOControl.js */ \"./public/js/socketIOControl.js\");\n\n\n\n\n\n\n\n// const socket = io(); //here the domain \n\n\nlet positionBoard = document.querySelector(\"#board_pst\");\nlet pstY = document.querySelector(\".pst_ind_left\");\nlet pstX = document.querySelector(\".pst_ind_right\");\n\nlet attackBoard = document.querySelector(\"#board_atk\");\nlet atkY = document.querySelector(\".atk_ind_left\");\nlet atkX = document.querySelector(\".atk_ind_right\");\n\nlet leftPtsPj1 = document.querySelector(\"#leftPts_pj1\")\nlet leftPtsPj2 = document.querySelector(\"#leftPts_pj2\")\n\n\nlet btnMakeArmy = document.querySelector(\"#make_army\")\nlet btnRandom = document.querySelector(\"#rand\")\nlet btnRestar = document.querySelector(\"#restar\")\nlet displayTurn = document.querySelector(\"#display_turn\")\nlet btnPlay = document.querySelector(\"#play\")\n\nlet btnJoinGame = document.querySelector(\"#join_game\")\nlet btnVsMachine = document.querySelector(\"#vs_machine\")\nlet btnCreateGame = document.querySelector(\"#vs_friend\")\nlet btnLeave = document.querySelector(\"#leave\")\nlet state = document.querySelector(\"#state\");\nlet containerInputRoom = document.getElementById(\"nameRoom\");\nlet btnsSelectOponent = document.getElementById(\"btn_select_opt\");\nconst inputNameRoom = document.getElementById(\"nameRoom_inp\");\n\nlet player = null;\nlet idOponent = null;\nlet selectionOponentMenu = null;\nlet nameGameRoom = null;\nlet idPlayer = null;\nlet machineAsOponent = null;\n\nfunction setID(id) {\n    idPlayer = id;\n}\nfunction setNameRoom(name) {\n    nameGameRoom = name\n\n}\nfunction setIdOponent(id) {\n    idOponent = id;\n}\n\n\n// //catch the id from the server\n// socket.on('id', (id) => {\n//     idPlayer = id;\n//     console.log(\"Your id:\", idPlayer);\n// })\n\n\n// //let to create a room to play \n// function handleCreateRoom() {\n//     nameGameRoom = inputNameRoom.value;\n\n//     const payload = {\n//         coordinates: player.board.listCoordinates,\n//         totalPoints: player.totalPoints\n//     }\n//     socket.emit('createRoom', nameGameRoom, idPlayer, payload, (response) => {\n//         if (response) {\n//             console.log(`Player: ${idPlayer} has joined room: ${nameGameRoom}`);\n//         }\n//     })\n// }\n\n// //let a partner to joint a room that have been created\n// async function handleJointToGame() {\n//     return new Promise((resolve, reject) => {\n//         let roomName = inputNameRoom.value\n//         socket.emit('joinRoom', roomName, idPlayer, (response) => {\n//             let res = response;\n//             resolve(res);\n//         })\n//     })\n// }\n\n\n// async function readyToStart() {\n//     const payload = {\n//         coordinates: player.board.listCoordinates,\n//         totalPoints: player.totalPoints\n//     }\n//     socket.emit('turns', nameGameRoom, idPlayer, payload)\n//     displayTurn.innerText = \"OPPONENT TURN\"\n// }\n// //recive the indication to star the game, is the pj that create the room (HOST)\n// socket.on('readyToPlay', (idOpt) => {\n//     state.innerText = \"a contenden has joined to this game\"\n//     idOponent = idOpt;\n//     displayTurn.innerText = \"YOUR TURN\"\n//     console.log(\"mi id:\", idPlayer, \"oponent id : \", idOponent);\n//     startAttack()\n// })\n\n// async function startAttack() {\n//     let cond = NaN;\n//     let pointTarget;\n//     //prevent to select a div that already was selected\n//     do {\n//         pointTarget = await allowedAttack()\n//         cond = parseInt(pointTarget) ? true : false;\n//     } while (!cond);\n//     socket.emit('gameHasStarted', pointTarget, idOponent, idPlayer, nameGameRoom)\n// }\n\n// socket.on('winner', (winner) => {\n//     if (winner == idPlayer) {\n//         displayTurn.innerText = \"YOU ARE THE WINNER\"\n//     } else {\n//         displayTurn.innerText = \"YOU LOST\"\n//     }\n// })\n\n// //draw the atack into the atackBoard\n// socket.on('drawAttackBoardPoint', (point, washit, restPtos) => {\n//     drawRemainPoints(restPtos[1], restPtos[0])\n//     drawPointOfAttack(attackBoard, point)\n//     if (washit) {\n//         displayTurn.innerText = \"YOUR TURN\"\n//         let div = attackBoard.querySelector(`div[value=\"${point}\"]`)\n//         navHit(div)\n//     } else {\n//         displayTurn.innerText = \"OPONENT TURN\"\n//     }\n// })\n\n// //draw the atakk into the position board\n// socket.on('drawPositionBoardPoint', (point, wasHit, restPtos) => {\n//     drawRemainPoints(restPtos[0], restPtos[1])\n//     drawPointOfAttack(positionBoard, point)\n//     if (wasHit) {\n//         // displayTurn.innerText = \"HOST TURN\"\n//         displayTurn.innerText = \"OPONENT TURN\"\n//     } else {\n//         displayTurn.innerText = \"YOUR TURN\"\n//     }\n// })\n\n// socket.on(\"playing\", () => {\n//     startAttack()\n// })\n\n// //let the player to play in his attack board for a turn\n// async function allowedAttack() {\n//     return new Promise((resolve, reject) => {\n//         function clickHandler(e) {\n//             let divTarget = e.target\n//             let pointTarget = divTarget.attributes[0].nodeValue;\n//             resolve(pointTarget)\n//         }\n//         attackBoard.addEventListener('click', clickHandler, { once: true })\n//     })\n// }\n\n\nfunction toggle(elemnt) {\n    elemnt.classList.toggle(\"selected\")\n}\n\n//select the oponent\nbtnsSelectOponent.addEventListener('click', (e) => {\n    selectionOponentMenu = e.target.value;\n    disbleHeaderOponents(e.target)\n    if (selectionOponentMenu === \"join\") {\n        btnMakeArmy.innerText = \"Join game\"\n        containerInputRoom.classList.remove('selected');\n\n    } else if (selectionOponentMenu === 'create') {\n        btnMakeArmy.innerText = \"create Game\"\n        containerInputRoom.classList.remove('selected');\n\n    } else {\n        containerInputRoom.classList.add('selected')\n    }\n})\n\n//set the actual elemnt as disable and the other options as able\nfunction disbleHeaderOponents(target) {\n    let buttonsOponent = [btnVsMachine, btnCreateGame, btnJoinGame]\n    for (const btn of buttonsOponent) {\n        if (btn === target) {\n            target.disabled = true\n        } else {\n            btn.disabled = false\n        }\n    }\n}\n\nbtnRandom.addEventListener(\"click\", () => {\n    cleanArea()\n    started()\n    player = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](gameModeSelected());\n    positionShipsOn(player)\n})\n\nbtnMakeArmy.addEventListener(\"click\", async () => {\n    if (selectionOponentMenu == null) {\n        alert(\"Please select a oponent\")\n\n    } else {\n        if (selectionOponentMenu === \"create\") {\n            if (inputNameRoom.value == \"\") {\n                alert(\"Please enter a room name first\")\n            } else {\n                hablePanel()\n            }\n\n        } else if (selectionOponentMenu === \"join\") {\n            if (inputNameRoom.value == \"\") {\n                alert(\"Please enter a room name first\")\n            } else {\n                let response = await (0,_socketIOControl_js__WEBPACK_IMPORTED_MODULE_3__.handleJointToGame)();\n                // console.log(response);\n                if (response) {\n                    console.log(`sucess join to romm: ${inputNameRoom.value}`);\n                    idOponent = response;\n                    nameGameRoom = inputNameRoom.value\n                    console.log(\"mi id:\", idPlayer, \"oponent id : \", idOponent);\n                    hablePanel()\n                    toggle(btnLeave, true)\n                }\n                else {\n                    alert(`The game: ${inputNameRoom.value} do not exist`)\n                }\n            }\n            // for vs machine\n        } else {\n            hablePanel()\n            machineAsOponent = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](gameModeSelected());\n        }\n    }\n})\n//................................................................................\n\n\n\nfunction hablePanel() {\n    player = new _player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](gameModeSelected());\n    positionShipsOn(player)\n\n    //create the elements for drag\n    ;(0,_dragControler_js__WEBPACK_IMPORTED_MODULE_2__.makingNewDiv)()\n\n    ;(0,_dragControler_js__WEBPACK_IMPORTED_MODULE_2__.controlDrag)(player); //start here //..................................here draw\n\n\n    disabledHtmlBtn(btnMakeArmy, true)\n    disabledHtmlBtn(btnPlay, false)\n    toggle(btnRandom)\n    toggle(btnRestar)\n}\n\nbtnPlay.addEventListener(\"click\", async () => {\n    disabledHtmlBtn(btnPlay, true)\n    disabledHtmlBtn(btnRandom, true)\n    switch (selectionOponentMenu) {\n        case \"machine\":\n            await turns(player, machineAsOponent, true);\n            break;\n        case \"create\":\n            (0,_socketIOControl_js__WEBPACK_IMPORTED_MODULE_3__.handleCreateRoom)()\n            state.innerText = \"waiting for the oponent to join\"\n            // socket.emit('readyToPlay', (nameGameRoom, player))\n            ;(0,_socketIOControl_js__WEBPACK_IMPORTED_MODULE_3__.readyToPlay)(nameGameRoom, player);\n\n            break;\n        case \"join\":\n            // await readyToStart();\n            // socket.emit('readyToPlay', (nameGameRoom, player))\n            (0,_socketIOControl_js__WEBPACK_IMPORTED_MODULE_3__.ready)();\n            break;\n        default:\n            break;\n    }\n})\n\nfunction cleanArea() {\n    player = null;\n    idOponent = null;\n    positionBoard.innerHTML = \"\";\n    attackBoard.innerHTML = \"\";\n    pstX.innerHTML = \"\";\n    pstY.innerHTML = \"\";\n    atkX.innerHTML = \"\";\n    atkY.innerHTML = \"\";\n    player = null;\n    idOponent = null;\n    machineAsOponent = null;\n    leftPtsPj1.innerText = \"0\";\n    leftPtsPj2.innerText = \"0\";\n    displayTurn.innerHTML = \"\";\n}\n\n\nbtnRestar.addEventListener(\"click\", () => {\n    location.replace(location.href);\n})\n\nfunction disableMainPanel() {\n    disabledHtmlBtn(btnRandom, true);\n    disabledHtmlBtn(btnVsMachine, false)\n    disabledHtmlBtn(btnPlay, true);\n    disabledHtmlBtn(btnJoinGame, false);\n    disabledHtmlBtn(btnMakeArmy, false)\n    disabledHtmlBtn(btnJoinGame, false)\n}\n\nfunction started() {\n    drawBasicBoard(positionBoard, pstY, pstX)\n    drawBasicBoard(attackBoard, atkY, atkX)\n}\n\nstarted()\n\nbtnLeave.addEventListener(\"click\", () => {\n    cleanArea()\n    disableMainPanel()\n    toggle(btnLeave)\n    started()\n    socket.emit('leave')\n})\n\nfunction gameModeSelected() {\n    let mode;\n    let radiosBtns = document.querySelectorAll(\".md\");\n    radiosBtns.forEach(element => {\n        if (element.checked) {\n            mode = element.value;\n        }\n    });\n    return mode;\n}\n\n\nfunction disabledHtmlBtn(btn, toggle) {\n    btn.disabled = toggle;\n    // btnMakeArmy.disabled = toggle;\n}\n\n//set the flow of the game, turn is a boolean to know who is playing\n//true -> player || false -> machine\nasync function turns(pjCurrentTurn, pjTarget, turn) {\n    drawRemainPoints()\n    if (turn) {\n        displayTurn.innerText = \"Human Turn\"\n    } else {\n        displayTurn.innerText = \"Machine Turn\"\n    }\n    //check if it´s posible play\n    if (pjCurrentTurn.totalPoints > 0 && pjTarget.totalPoints > 0) {\n        if (turn) {\n            attackBoard.addEventListener(\"click\", async e => {\n                let divTarget = e.target\n                // mark in the map\n                let pointTarget = divTarget.attributes[0].nodeValue;\n                drawPointOfAttack(attackBoard, pointTarget)\n                let wasHit = await checkHit(pointTarget, pjCurrentTurn, pjTarget);\n                if (wasHit) {\n                    navHit(divTarget)\n                    //the actual PJ continue with the turn\n                    turns(pjCurrentTurn, pjTarget, true)\n                } else {\n                    turns(pjTarget, pjCurrentTurn, false)\n                }\n            }, { once: true })\n        } else {\n            await playMachine(pjCurrentTurn, pjTarget);\n            turns(pjTarget, pjCurrentTurn, true)\n        }\n    } else {\n        gameOver();\n    }\n}\n\n\nfunction gameOver() {\n    console.log(\"game Over\");\n    let winner = player.totalPoints == 0 ? \"MACHINE\" : \"HUMAN\";\n    displayTurn.innerText = winner + \" Win\";\n    disabledHtmlBtn(btnMakeArmy, false)\n}\n\nasync function drawRemainPoints(playerPoints = player.totalPoints, oponetPoints = machineAsOponent.totalPoints) {\n    leftPtsPj1.innerText = `${playerPoints}`\n    leftPtsPj2.innerText = `${oponetPoints}`\n}\n\nfunction drawPointOfAttack(board, point) {\n    let div = board.querySelector(`div[data-value=\"${point}\"]`)\n    // div.innerText = \"X\"\n    div.innerHTML = \"<img src='./images/diana.png'>\"\n    div.classList.add(\"hit\");\n}\n\nasync function playMachine(machineBoard, humanBoard) {\n    let point;\n    let wasHIt;\n    let partialpoint\n    do {\n        //serch for a point around the last hit\n        let prevElemts = machineBoard.getLastGooPositionOfAtk();\n        //it is think that work after ther second iteration\n        if (wasHIt || prevElemts[0] != undefined) {\n            //while still good position take those\n            if (prevElemts.length > 0) {\n                partialpoint = machineBoard.board.getRandomInt(0, prevElemts.length - 1)\n                point = prevElemts[partialpoint];\n                machineBoard.removeAgoodPosition(point);\n            } else {\n                //surch for a good positions\n                let around = serchNerbyPto(point, machineBoard.getMapPointAttk(), machineBoard);\n                partialpoint = machineBoard.board.getRandomInt(0, around.length - 1)\n                point = around[partialpoint]\n                machineBoard.removeAgoodPosition(point);\n            }\n        } else {\n            do {\n                point = machineBoard.board.getRandomInt();\n                // prevent to select a point that alredy was selectec - is a hash map\n            } while (machineBoard.getMapPointAttk(point));\n        }\n        //select the point on the position board\n        let div = positionBoard.querySelector(`div[data-value=\"${point}\"]`)\n        // to go a little slow\n        await timeOut()\n        drawPointOfAttack(positionBoard, point)\n        wasHIt = await checkHit(point, machineBoard, humanBoard)\n        if (wasHIt) {\n            navHit(div)\n            quitOusidePoints(point, machineBoard);\n            //adding the new good point to the list of good points\n            serchNerbyPto(point, machineBoard.getMapPointAttk(), machineBoard);\n        }\n        //save the point that was selected\n        machineBoard.setMapPointsAttk(point)\n        //clean the remain options for a point\n        cleanGoodPositions(machineBoard, machineBoard.getLastGooPositionOfAtk())\n    } while (wasHIt && humanBoard.totalPoints > 0);\n}\n\nfunction cleanGoodPositions(machineBoard, listPositiones) {\n    for (const position of listPositiones) {\n        if (machineBoard.getMapPointAttk(position)) {\n            machineBoard.removeAgoodPosition(position)\n        }\n    }\n}\n\nfunction timeOut(ms = 2000) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nfunction navHit(ship) {\n    ship.classList.add(\"nav_hit\")\n}\n// check if a ship was hit, if so call the methos to discount points \n//point -> the selected point on the map\nasync function checkHit(unFormatPoint, playerInTurn, playerTarget) {\n    let point = parseInt(unFormatPoint);\n    let coord = Object.values(playerTarget.board)[0];\n    //if hit\n    if (coord[point]) {\n        let ship = playerTarget.identifyShip(point)\n        ship.hit()\n        playerTarget.discountPoint();\n        return true\n    } else {\n        return false;\n    };\n}\n\n\n// position the ships of a player\nfunction positionShipsOn(player) {\n    let listNav = player.listShips;\n    listNav.forEach(nav => {\n        // console.log(nav);\n        marker(nav.getPositions(), nav.getClass())\n    });\n}\n\n//draw the point (ship) in the board\nfunction marker(arrylist, className) {\n    arrylist.forEach(elm => {\n        let tempo = document.querySelector(`div[data-value=\"${elm}\"]`)\n        // tempo.setAttribute('draggable', \"true\")\n        tempo.classList.add(`${className}`)\n        tempo.classList.add(\"ship\")\n        // tempo.style.zIndex = \"1\";\n\n\n    });\n}\n\n//draw the grid and the indicators\nfunction drawBasicBoard(targetBoard, y, x) {\n    let letter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']\n    for (let i = 0; i < 100; i++) {\n        if (i < 10) {\n            let ind = document.createElement(\"div\");\n            ind.innerText = i + 1;\n            y.appendChild(ind)\n            let sInd = document.createElement(\"div\");\n            sInd.innerText = letter[i]\n            x.appendChild(sInd)\n        }\n        let square = document.createElement(\"div\");\n        square.setAttribute(\"data-value\", `${i}`);\n        targetBoard.appendChild(square);\n        if (targetBoard != positionBoard) {\n            square.classList.add(\"squareAttack\")\n        }\n    }\n}\n//return a list of valid points around a point and add to the board those elemnts\nfunction serchNerbyPto(pointStr, listPtosAttaked, machineBoard) {\n    let partialPerimeter = []\n    //the 4 points around\n    let pointsAround = [\n        pointStr - 1,\n        pointStr + 1,\n        pointStr - 10,\n        pointStr + 10,\n    ]\n    let topesList = topes(pointStr)\n    pointsAround.forEach(element => {\n        if (listPtosAttaked[element] == undefined && !(topesList.includes(element))) {\n            partialPerimeter.push(element)\n        }\n    });\n    machineBoard.setLastGoodPositionsOfAtk(partialPerimeter);\n    return partialPerimeter\n}\n//identify that the points are valid\nfunction topes(pointStr) {\n    let baseRow = Math.floor(pointStr / 10);\n    let baseCol = pointStr % 10\n    let topes = []\n    if (baseCol == 9) {\n        topes.push(...[pointStr + 1, (pointStr - 10) + 1, (pointStr + 10) + 1])\n        // if the point is at the begining of the columns\n    } if (baseCol == 0) {\n        topes.push(...[pointStr - 1, (pointStr - 10) - 1, (pointStr + 10) - 1]);\n    } if (baseRow == 0) {\n        topes.push(...[pointStr - 10, (pointStr - 10) - 1, (pointStr - 10) + 1]);\n    } if (baseRow == 9) {\n        topes.push(...[pointStr + 10, (pointStr + 10) - 1, (pointStr + 10) + 1])\n    }\n    return topes\n}\n\nfunction quitOusidePoints(pointStr, machineBoard) {\n    let topesList = topes(pointStr)\n    let discountPoints = [\n        (pointStr - 1) + 10,\n        (pointStr - 1) - 10,\n        (pointStr + 1) + 10,\n        (pointStr + 1) - 10\n    ]\n    for (const pto of discountPoints) {\n        if (!topesList.includes(pto)) {\n            machineBoard.setMapPointsAttk(pto)\n        }\n    }\n}\n\n\n\n//# sourceURL=webpack://battleshipodp/./public/js/index.js?");

/***/ }),

/***/ "./public/js/player.js":
/*!*****************************!*\
  !*** ./public/js/player.js ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Player: () => (/* binding */ Player),\n/* harmony export */   \"default\": () => (/* binding */ Player)\n/* harmony export */ });\n/* harmony import */ var _gameBoard_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameBoard.js */ \"./public/js/gameBoard.js\");\n/* harmony import */ var _ship_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ship.js */ \"./public/js/ship.js\");\n\n\n\n// const GameBoard = require('./gameBoard');\n// const Ship = require('./ship');\n\nclass Player {\n    board = null;\n    listShips = [];\n    numbOfShips = null;\n    totalPoints = 0;\n    #mapPointsOfAttacked = [];\n    #lastGoodPositionsOfAtk = [];\n    #listClassShips = [];\n\n    constructor(mode) {\n        this.setModeGame(mode);\n        this.setShips();\n        this.board = new _gameBoard_js__WEBPACK_IMPORTED_MODULE_0__.GameBoard(this.listShips);\n        this.setTotalPoints();\n        this.setListClassShips();\n    }\n\n    setListClassShips() {\n        for (const element of this.listShips) {\n            if (!this.#listClassShips.includes(element.getClass())) {\n                let tempo = element.getClass();\n                this.#listClassShips.push(tempo)\n            }\n        }\n    }\n    getListClass() {\n        this.#listClassShips = [];\n        this.setListClassShips();\n        return this.#listClassShips\n    }\n    getTotalPoints() {\n        return this.totalPoints;\n    }\n\n    setTotalPoints() {\n        for (const iterator of this.listShips) {\n            this.totalPoints += iterator.getSizeShip();\n        }\n    }\n    discountPoint() {\n        this.totalPoints--;\n    }\n\n\n    setLastGoodPositionsOfAtk(points) {\n        this.#lastGoodPositionsOfAtk.push(...points)\n    }\n    getLastGooPositionOfAtk() {\n        return this.#lastGoodPositionsOfAtk\n    }\n    removeAgoodPosition(elm) {\n        // this.#lastGoodPositionsOfAtk.shift()\n        let index = this.#lastGoodPositionsOfAtk.indexOf(elm);\n        this.#lastGoodPositionsOfAtk.splice(index, 1)\n\n    }\n\n\n    setModeGame(md) {\n        switch (md) {\n            case \"H\":\n                this.numbOfShips = 1;\n                break;\n            case \"R\":\n                this.numbOfShips = 7;\n                break;\n            default:\n                this.numbOfShips = 5;\n                break;\n        }\n    }\n\n    // fill the array with the ships size (1 and 5)\n    // or whith the specifc list\n    setShips() {\n        let listSizeShips = [1, 2, 3, 4, 5, 2, 3]\n\n        for (let i = 0; i < this.numbOfShips; i++) {\n            this.listShips.push(new _ship_js__WEBPACK_IMPORTED_MODULE_1__.Ship(listSizeShips[i]))\n        }\n    }\n\n\n    identifyShip(num) {\n        let intNum = parseInt(num)\n        for (const nav of this.listShips) {\n            let pointsN = Object.values(nav.getPositions());\n            if (pointsN.includes(intNum)) {\n                return nav\n            }\n        }\n    }\n\n    getMapPointAttk(pto = 100) {\n        if (pto == 100) {\n            return this.#mapPointsOfAttacked\n        } else {\n            return this.#mapPointsOfAttacked[pto];\n        }\n    }\n\n    setMapPointsAttk(pto) {\n        this.#mapPointsOfAttacked[pto] = true;\n    }\n\n    updateShip(ship, replace) {\n        let nav = this.identifyShip(ship);\n        const navIndex = this.listShips.findIndex((elm) => elm === nav);\n        this.listShips[navIndex] = replace;\n    }\n}\n\n\n// module.exports = Player;\n\n\n//# sourceURL=webpack://battleshipodp/./public/js/player.js?");

/***/ }),

/***/ "./public/js/ship.js":
/*!***************************!*\
  !*** ./public/js/ship.js ***!
  \***************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ship: () => (/* binding */ Ship)\n/* harmony export */ });\nclass Ship {\n    #hitsRecived = 0;\n    #sunk = false;\n    #lenghtShip = 0;\n    #type;\n    #positions = [];\n    #spaceAround = [];\n\n    constructor(lenght = this.#randomLength()) {\n        this.#lenghtShip = lenght;\n        this.#setType();\n    }\n\n    getHitsRecived() {\n        return this.#hitsRecived;\n    }\n\n    getSunk() {\n        return this.#sunk;\n    }\n    getSizeShip() {\n        return this.#lenghtShip;\n    }\n    getType() {\n        return this.#type;\n    }\n\n    #randomLength() {\n        const MIN = 1;\n        const MAX = 5;\n        return Math.floor(Math.random() * (MAX - MIN + 1) + MIN);\n    }\n    setSpaceAround(listPointsAround) {\n        this.#spaceAround = listPointsAround;\n    }\n    getSpaceAround() {\n        return this.#spaceAround;\n    }\n\n    setPosition(listOfPositions) {\n        this.#positions = listOfPositions;\n    }\n\n    getPositions() {\n        return this.#positions;\n    }\n    getClass() {\n        const regex = /,/g\n        return (this.getType() + \"_\" + this.getPositions().toString().replace(regex, \"_\")).replace(\" \", \"_\")\n    }\n\n    hit() {\n        if (!this.getSunk()) {\n            this.#hitsRecived += 1;\n        }\n        this.#setSunk();\n    }\n\n    #setSunk() {\n        if (this.#hitsRecived >= this.#lenghtShip) {\n            this.#sunk = true;\n        }\n        return this.#sunk\n    }\n\n    #setType() {\n        switch (this.#lenghtShip) {\n            case 1:\n                this.#type = \"boat\"\n                break;\n            case 2:\n                this.#type = \"PatrolBoat\"\n                break\n            case 3:\n                this.#type = \"Submarine\"\n                break\n            case 4:\n                this.#type = \"Destroyer\"\n                break\n            default:\n                this.#type = \"Carrier\"\n                break;\n        }\n    }\n}\n\n\n// module.exports = Ship;\n\n//# sourceURL=webpack://battleshipodp/./public/js/ship.js?");

/***/ }),

/***/ "./public/js/socketIOControl.js":
/*!**************************************!*\
  !*** ./public/js/socketIOControl.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleCreateRoom: () => (/* binding */ handleCreateRoom),\n/* harmony export */   handleJointToGame: () => (/* binding */ handleJointToGame),\n/* harmony export */   ready: () => (/* binding */ ready),\n/* harmony export */   readyToPlay: () => (/* binding */ readyToPlay),\n/* harmony export */   readyToStart: () => (/* binding */ readyToStart)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./public/js/index.js\");\n\n\nconst socket = io(); //here the domain \n\n//catch the id from the server\nsocket.on('id', (id) => {\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.setID)(id)\n    // idPlayer = id;\n    console.log(\"Your id:\", _index_js__WEBPACK_IMPORTED_MODULE_0__.idPlayer);\n})\n\nfunction readyToPlay(nameRoom, pj) {\n    socket.emit('readyToPlay', (nameRoom, pj))\n}\nasync function ready() {\n    await readyToStart()\n    socket.emit('readyToPlay', (_index_js__WEBPACK_IMPORTED_MODULE_0__.nameGameRoom, _index_js__WEBPACK_IMPORTED_MODULE_0__.player))\n}\n\n\n//let to create a room to play \nfunction handleCreateRoom() {\n    // nameGameRoom = inputNameRoom.value;\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.setNameRoom)(_index_js__WEBPACK_IMPORTED_MODULE_0__.inputNameRoom.value)\n\n    const payload = {\n        coordinates: _index_js__WEBPACK_IMPORTED_MODULE_0__.player.board.listCoordinates,\n        totalPoints: _index_js__WEBPACK_IMPORTED_MODULE_0__.player.totalPoints\n    }\n    socket.emit('createRoom', _index_js__WEBPACK_IMPORTED_MODULE_0__.nameGameRoom, _index_js__WEBPACK_IMPORTED_MODULE_0__.idPlayer, payload, (response) => {\n        if (response) {\n            console.log(`Player: ${_index_js__WEBPACK_IMPORTED_MODULE_0__.idPlayer} has joined room: ${_index_js__WEBPACK_IMPORTED_MODULE_0__.nameGameRoom}`);\n        }\n    })\n}\n\n//let a partner to joint a room that have been created\nasync function handleJointToGame() {\n    return new Promise((resolve, reject) => {\n        let roomName = _index_js__WEBPACK_IMPORTED_MODULE_0__.inputNameRoom.value\n        socket.emit('joinRoom', roomName, _index_js__WEBPACK_IMPORTED_MODULE_0__.idPlayer, (response) => {\n            let res = response;\n            resolve(res);\n        })\n    })\n}\n\n\nasync function readyToStart() {\n    const payload = {\n        coordinates: _index_js__WEBPACK_IMPORTED_MODULE_0__.player.board.listCoordinates,\n        totalPoints: _index_js__WEBPACK_IMPORTED_MODULE_0__.player.totalPoints\n    }\n    socket.emit('turns', _index_js__WEBPACK_IMPORTED_MODULE_0__.nameGameRoom, _index_js__WEBPACK_IMPORTED_MODULE_0__.idPlayer, payload)\n    _index_js__WEBPACK_IMPORTED_MODULE_0__.displayTurn.innerText = \"OPPONENT TURN\"\n}\n//recive the indication to star the game, is the pj that create the room (HOST)\nsocket.on('readyToPlay', (idOpt) => {\n    _index_js__WEBPACK_IMPORTED_MODULE_0__.state.innerText = \"a contenden has joined to this game\"\n    // idOponent = idOpt;\n    ;(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.setIdOponent)(idOpt)\n    _index_js__WEBPACK_IMPORTED_MODULE_0__.displayTurn.innerText = \"YOUR TURN\"\n    console.log(\"mi id:\", _index_js__WEBPACK_IMPORTED_MODULE_0__.idPlayer, \"oponent id : \", _index_js__WEBPACK_IMPORTED_MODULE_0__.idOponent);\n    startAttack()\n})\n\nasync function startAttack() {\n    let cond = NaN;\n    let pointTarget;\n    //prevent to select a div that already was selected\n    do {\n        pointTarget = await allowedAttack()\n        cond = parseInt(pointTarget) ? true : false;\n    } while (!cond);\n    socket.emit('gameHasStarted', pointTarget, _index_js__WEBPACK_IMPORTED_MODULE_0__.idOponent, _index_js__WEBPACK_IMPORTED_MODULE_0__.idPlayer, _index_js__WEBPACK_IMPORTED_MODULE_0__.nameGameRoom)\n}\n\nsocket.on('winner', (winner) => {\n    if (winner == _index_js__WEBPACK_IMPORTED_MODULE_0__.idPlayer) {\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.displayTurn.innerText = \"YOU ARE THE WINNER\"\n    } else {\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.displayTurn.innerText = \"YOU LOST\"\n    }\n})\n\n//draw the atack into the atackBoard\nsocket.on('drawAttackBoardPoint', (point, washit, restPtos) => {\n    ;(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.drawRemainPoints)(restPtos[1], restPtos[0])\n    ;(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.drawPointOfAttack)(_index_js__WEBPACK_IMPORTED_MODULE_0__.attackBoard, point)\n    if (washit) {\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.displayTurn.innerText = \"YOUR TURN\"\n        let div = _index_js__WEBPACK_IMPORTED_MODULE_0__.attackBoard.querySelector(`div[data-value=\"${point}\"]`)\n        ;(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.navHit)(div)\n    } else {\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.displayTurn.innerText = \"OPONENT TURN\"\n    }\n})\n\n//draw the atakk into the position board\nsocket.on('drawPositionBoardPoint', (point, wasHit, restPtos) => {\n    ;(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.drawRemainPoints)(restPtos[0], restPtos[1])\n    ;(0,_index_js__WEBPACK_IMPORTED_MODULE_0__.drawPointOfAttack)(_index_js__WEBPACK_IMPORTED_MODULE_0__.positionBoard, point)\n    if (wasHit) {\n        // displayTurn.innerText = \"HOST TURN\"\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.displayTurn.innerText = \"OPONENT TURN\"\n    } else {\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.displayTurn.innerText = \"YOUR TURN\"\n    }\n})\n\nsocket.on(\"playing\", () => {\n    startAttack()\n})\n\n//let the player to play in his attack board for a turn\nasync function allowedAttack() {\n    return new Promise((resolve, reject) => {\n        function clickHandler(e) {\n            let divTarget = e.target\n            let pointTarget = divTarget.attributes[0].nodeValue;\n            resolve(pointTarget)\n        }\n        _index_js__WEBPACK_IMPORTED_MODULE_0__.attackBoard.addEventListener('click', clickHandler, { once: true })\n    })\n}\n\n//# sourceURL=webpack://battleshipodp/./public/js/socketIOControl.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./public/js/index.js");
/******/ 	
/******/ })()
;